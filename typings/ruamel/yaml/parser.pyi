"""
This type stub file was generated by pyright.
"""

from ruamel.yaml.error import MarkedYAMLError
from ruamel.yaml.tokens import *
from ruamel.yaml.events import *
from ruamel.yaml.tag import Tag

if False: ...
__all__ = ["Parser", "RoundTripParser", "ParserError"]

def xprintf(*args: Any, **kw: Any) -> Any: ...

class ParserError(MarkedYAMLError): ...

class Parser:
    DEFAULT_TAGS = ...
    def __init__(self, loader: Any) -> None: ...
    def reset_parser(self) -> None: ...
    def dispose(self) -> None: ...
    @property
    def scanner(self) -> Any: ...
    @property
    def resolver(self) -> Any: ...
    def check_event(self, *choices: Any) -> bool: ...
    def peek_event(self) -> Any: ...
    def get_event(self) -> Any: ...
    def parse_stream_start(self) -> Any: ...
    def parse_implicit_document_start(self) -> Any: ...
    def parse_document_start(self) -> Any: ...
    def parse_document_end(self) -> Any: ...
    def parse_document_content(self) -> Any: ...
    def process_directives(self) -> Any: ...
    def parse_block_node(self) -> Any: ...
    def parse_flow_node(self) -> Any: ...
    def parse_block_node_or_indentless_sequence(self) -> Any: ...
    def select_tag_transform(self, tag: Tag) -> None: ...
    def parse_node(self, block: bool = ..., indentless_sequence: bool = ...) -> Any: ...
    def parse_block_sequence_first_entry(self) -> Any: ...
    def parse_block_sequence_entry(self) -> Any: ...
    def parse_indentless_sequence_entry(self) -> Any: ...
    def parse_block_mapping_first_key(self) -> Any: ...
    def parse_block_mapping_key(self) -> Any: ...
    def parse_block_mapping_value(self) -> Any: ...
    def parse_flow_sequence_first_entry(self) -> Any: ...
    def parse_flow_sequence_entry(self, first: bool = ...) -> Any: ...
    def parse_flow_sequence_entry_mapping_key(self) -> Any: ...
    def parse_flow_sequence_entry_mapping_value(self) -> Any: ...
    def parse_flow_sequence_entry_mapping_end(self) -> Any: ...
    def parse_flow_mapping_first_key(self) -> Any: ...
    def parse_flow_mapping_key(self, first: Any = ...) -> Any: ...
    def parse_flow_mapping_value(self) -> Any: ...
    def parse_flow_mapping_empty_value(self) -> Any: ...
    def process_empty_scalar(self, mark: Any, comment: Any = ...) -> Any: ...
    def move_token_comment(
        self, token: Any, nt: Optional[Any] = ..., empty: Optional[bool] = ...
    ) -> Any: ...

class RoundTripParser(Parser):
    """roundtrip is a safe loader, that wants to see the unmangled tag"""
    def select_tag_transform(self, tag: Tag) -> None: ...
    def move_token_comment(
        self, token: Any, nt: Optional[Any] = ..., empty: Optional[bool] = ...
    ) -> Any: ...

class RoundTripParserSC(RoundTripParser):
    """roundtrip is a safe loader, that wants to see the unmangled tag"""
    def move_token_comment(
        self: Any, token: Any, nt: Any = ..., empty: Optional[bool] = ...
    ) -> None: ...
    def distribute_comment(self, comment: Any, line: Any) -> Any: ...
