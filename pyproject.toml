[tool.poetry]
name = "snakebids"
version = "0.4.0-pre.2"
description = "BIDS integration into snakemake workflows"
readme = "README.rst"
repository = "https://github.com/akhanf/snakebids"
documentation = "https://snakebids.readthedocs.io/"
authors = ["Ali Khan <alik@robarts.ca>"]
license = "MIT"
packages = [
    { include = "snakebids" }
]
include = ["project_template"]
exclude = ["snakebids/tests/**"]

[tool.poetry.dependencies]
python = ">=3.7,<3.11"
pybids = "^0.14.0"
snakemake = ">=5.28.0"
PyYAML = "^5.3.1"
cookiecutter = "^1.7.2"
colorama = "^0.4.4"
typing-extensions = "^3.10.0"
progress = "^1.6"

[tool.poetry.dev-dependencies]
black = "^21.10b0"
pytest = "^6.2.5"
pytest-mock = "^3.6.1"
pylint = "^2.11.1"
isort = "^5.10.1"
flake8 = "^4.0.1"
poethepoet = "^0.10.0"
pre-commit = "^2.15.0"
mkinit = "^0.3.3"

[tool.poetry.scripts]
snakebids-create = "snakebids.template:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
setup = "pre-commit install"
quality = { shell = "isort snakebids && black snakebids && flake8 snakebids && pylint snakebids" }
test = "pytest"
mkinit = "mkinit --recursive --nomods --black -i snakebids"

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pylint.master]
ignore-patterns = "^[0-9][0-9]+_,^test_"

[tool.pylint.format]
good-names = "i,j,k,ex,_,x,y,f,d"

[tool.pylint.messages_control]
disable = """
    missing-function-docstring,
    missing-module-docstring,
    fixme
"""
